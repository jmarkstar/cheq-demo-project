// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = '1.4.20'
        livecycle_version = "2.2.0"
        room_version = '2.3.0-alpha03'//moving from 2.2.5 because -> https://issuetracker.google.com/issues/150106190
        android_sqlcipher = '4.4.2'
        sqlite_ktx_version = '2.1.0'
        hilt_version = '2.28-alpha'
        hilt_viewmodel_version = '1.0.0-alpha02'
        coroutines_version = '1.3.9'
        timber_version = '4.7.1'
        firebase_BoM = '26.1.1'
        security_crypto_version = '1.1.0-alpha03'//using this version to support api 21

        //test
        jacoco_version = '0.8.5'
        junit_version ="4.13.1"
        mockk_version="1.10.0"
        robolectric_version ="4.4"
        espresso_version="3.3.0"
        testcore_version ="1.3.0"
        testRunner_version ="1.2.0"
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        // Jacoco report task does not wait for Android connected tests since 6.4 and
        // need tools.build:gradle:4.0.2 for 6.3 info: https://github.com/gradle/gradle/issues/14132
        //noinspection GradleDependency
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath 'com.google.gms:google-services:4.3.4'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'
        classpath 'gradle.plugin.chrisney:enigma:1.0.0.8'
        classpath "org.jacoco:org.jacoco.core:$jacoco_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}